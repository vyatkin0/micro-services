/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    // ASSUMES GRADLE 5.6 OR HIGHER. Use plugin version 0.8.10 with earlier gradle versions
    id 'com.google.protobuf' version '0.8.18'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

def grpcVersion = '1.45.1' // CURRENT_GRPC_VERSION
def protobufVersion = '3.19.2'
def protocVersion = protobufVersion
def postgresqlVersion = '42.3.3'

dependencies {
    runtimeOnly "org.postgresql:postgresql:${postgresqlVersion}"
    //runtimeOnly 'com.h2database:h2:2.1.214'
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.jsonwebtoken:jjwt:0.9.1"
    implementation "javax.xml.bind:jaxb-api:2.3.1"

    // https://mvnrepository.com/artifact/org.hibernate.orm/hibernate-core
    implementation 'org.hibernate.orm:hibernate-core:6.0.0.Final'

    // https://mvnrepository.com/artifact/org.hibernate.common/hibernate-commons-annotations
    implementation 'org.hibernate.common:hibernate-commons-annotations:6.0.0.Final'

    // https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator
    implementation 'org.hibernate.validator:hibernate-validator:7.0.4.Final'

    // https://mvnrepository.com/artifact/org.glassfish/jakarta.el
    implementation 'org.glassfish:jakarta.el:4.0.2'

    compileOnly "org.apache.tomcat:annotations-api:6.0.53"

    // examples/advanced need this for JsonFormat
    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"

    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        proto {
            srcDirs 'src/main'
        }
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

startScripts.enabled = false

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

task ordersServer(type: CreateStartScripts) {
    mainClass = 'orders.App'
    applicationName = 'orders-server'
    outputDir = new File(project.buildDir, 'tmp/scripts/' + name)
    classpath = startScripts.classpath
}

task ordersClient(type: CreateStartScripts) {
    mainClass = 'orders.Client'
    applicationName = 'orders-client'
    outputDir = new File(project.buildDir, 'tmp/scripts/' + name)
    classpath = startScripts.classpath
}

applicationDistribution.into('bin') {
    from(ordersServer)
    from(ordersClient)
    fileMode = 0755
}
